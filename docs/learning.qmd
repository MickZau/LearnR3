---
title: "Draft Quarto document"
author: "Michael Zaucha SÃ¸rensen"
format: html
editor_options: 
  chunk_output_type: inline
---

## Header 1

```{r setup}
#| include: false
library(fs)
library(stringr)
library(tidyverse)
library(here)
library(lubridate)
library(snakecase)
source(here("R/functions.R"))
# CGM files
cgm_data <- here("data-raw/dime/cgm/") |>
  import_csv_files() |> 
  get_participant_id() |> 
  prepare_dates(device_timestamp)
# Sleep data
sleep_data <- here("data-raw/dime/sleep") |>
  import_csv_files() |> 
  get_participant_id() |> 
  rename(datetime = date) |> 
  prepare_dates(datetime)
```

```{r}
cgm_data

sleep_data
```


```{r}
# Code chunk
```

## Importing CGM
```{r}#
cgm_101 <- here("data-raw/dime/cgm/101.csv") |>
  read_csv(
    show_col_types = FALSE,
    name_repair = to_snake_case,
    n_max = 100
  )
cgm_101
```

## Exercise: Import 101's sleep data
```{r}#
sleep_101 <- here("data-raw/dime/sleep/101.csv") |>
  read_csv(
    show_col_types = FALSE,
    name_repair = to_snake_case,
    n_max = 100
  )
sleep_101
```

## Making a function that adds numbers

```{r}#
#' Add two numbers together
#'
#' @param num1 A number
#' @param num2 A number
#'
#' @returns Returns the sum of the numbers
#'
#'
add_numbers <- function(num1, num2) {
  added <- num1 + num2
  return(added)
}

add_numbers(98, 85)
```

# Import CGM data with a function
```{r}#
#' Import participant CGM
#'
#' @param file_path Path to file
#'
#' @returns Returns a data frame
#'
#' @examples
import_cgm <- function(file_path) {
  cgm <- file_path |>
    read_csv(
      show_col_types = FALSE,
      name_repair = to_snake_case,
      n_max = 100
    )
  return(cgm)
}

here("data-raw/dime/cgm/101.csv") |>
  import_cgm()

here("data-raw/dime/sleep/102.csv") |>
  import_cgm()
```

## Exercise to make function to import sleep data

```{r}#
import_sleep <- function(file_path) {
  sleep <- file_path |>
    readr::read_csv(
      show_col_types = FALSE,
      name_repair = to_snake_case,
      n_max = 100
    )
  return(sleep)
}

here("data-raw/dime/sleep/102.csv") |>
  import_sleep()

here("data-raw/dime/cgm/102.csv") |>
  import_sleep()
```

## Import DIME data function

```{r}#
here("data-raw/dime/sleep/101.csv") |>
  import_dime()

here("data-raw/dime/cgm/101.csv") |>
  import_dime()
```

## Exercise: Convert map to function and use on sleep

```{r}#
here("data-raw/dime/cgm/") |>
  import_csv_files()
here("data-raw/dime/sleep/") |>
  import_csv_files()
```

## Testing regex with path ID

```{r}#
cgm_data <- here("data-raw/dime/cgm") |>
  import_csv_files() |>
  get_participant_id()
```

## Working with dates

```{r}#
cgm_data |> 
  mutate(
    date = as_date(device_timestamp),
    hour = hour(device_timestamp),
    .before = device_timestamp
  ) |> 
  select(-device_timestamp)
```

```{r}#
prepare_dates <- function(data, column) {
  prepared_dates <- data |> 
  mutate(
    date = as_date({{column}}),
    hour = hour({{column}}),
    .before = {{column}}
  )
  return(prepared_dates)
}

prepare_dates(cgm_data, device_timestamp)

prepare_dates(sleep_data, datetime)
```

